var breed1,breed2,gen,sex,cid,count,myWH=new Array;const ipfs=IpfsApi({host:"ipfs.infura.io",port:5001,protocol:"https"});var img;async function loadMyOwl(){const e=await contract.methods.getWallet(await getCurrentAccount()).call();for(let a=0;a<e.length;a++){var t;myWH[a]=new Array,await contract.methods.owl(e[a]).call().then(e=>{for(let t=0;t<6;t++)myWH[a][t]=e[t+1]}),myWH[a][6]="Whooli Hootie #"+e[a],myWH[a][7]="https://ipfs.io/ipfs/"+img[myWH[a][3]][myWH[a][4]],myWH[a][8]=e[a],await contract.methods.gen(parseInt(myWH[a][3])+1).call().then(e=>{t=parseInt(e[0])>parseInt(e[1])}),$("#myWH").append('<p id="o'+e[a]+'" class="boxnft"><b>'+myWH[a][6]+"</b><br/>Parents ID: "+myWH[a][0]+" + "+myWH[a][1]+"<br/>Last breeded: "+(myWH[a][2]>0?moment(moment.unix(myWH[a][2])).fromNow():"Since forever")+"<br/>Generation: "+myWH[a][3]+" ("+(0==myWH[a][4]?"Female":"Male")+')<br/><video autoplay loop muted src="'+myWH[a][7]+(moment.duration(moment().diff(moment(moment.unix(myWH[a][2])))).asSeconds()>0&&1==t?'" onclick="loadImg('+a+')" class="nft':'" class="nobreed')+'"></video></p> ')}}async function loadImg(e){const t='<video autoplay loop muted onclick="unloadImg()" src="'+myWH[e][7]+'" class="nft"></video>';if($("#breed1").is(":empty"))$("#breed1").html(t),breed1=myWH[e][8],hideOwls(e);else{if(!$("#breed2").is(":empty"))return;$("#breed2").html(t),breed2=myWH[e][8],hideOwls(e)}$("#breed1").is(":empty")||$("#breed2").is(":empty")||($("#breed").show(),await contract.methods.gen(parseInt(myWH[e][3])+1).call().then(e=>{$("#lblBreed").html("("+e[1]+"/"+e[0]+")")}),gen=parseInt(myWH[e][3])+1)}async function hideOwls(e){for(let t=0;t<myWH.length;t++)myWH[t][4]!=myWH[e][4]&&myWH[t][3]==myWH[e][3]||$("#o"+myWH[t][8]).hide(),myWH[t][0]==myWH[e][8]&&$("#o"+myWH[t][1]).hide(),myWH[t][1]==myWH[e][8]&&$("#o"+myWH[t][0]).hide()}async function unloadImg(){$("#breed1").empty(),$("#breed2").empty(),$("#lblBreed").empty(),breed1=null,breed2=null,$("#breed").hide();for(let e=0;e<myWH.length;e++)$("#o"+myWH[e][8]).show()}async function getCurrentAccount(){return(await web3.eth.getAccounts())[0]}async function getCID(){sex=Math.floor(2*Math.random());const e=await new Promise(e=>{const t=new FileReader;t.onloadend=(()=>{ipfs.add(ipfs.Buffer.from(t.result)).then(t=>{e(t)})}),t.readAsArrayBuffer(new File([JSON.stringify({name:"Whooli Hootie #"+(parseInt(count)+1),description:"We are a green chip NFT that gives passive income and many offline perks. Find another gender to breed your baby owl now!",animation_url:"ipfs://"+img[gen][sex],attributes:[{display_type:"number",trait_type:"Generation",value:gen},{trait_type:"Gender",value:0==sex?"Female":"Male"},{trait_type:"Parent 1",value:null==breed1?"":"WHCC #"+breed1},{trait_type:"Parent 2",value:null==breed2?"":"WHCC #"+breed2},{display_type:"date",trait_type:"Hatched date",value:Date.now()}]})],"application/json"))});cid=e[0].hash}async function MINT(){gen=1,await getCID(),await contract.methods.MINT(sex,cid).send({from:await getCurrentAccount(),gas:25e4,value:0}),location.reload()}async function BREED(){await getCID(),await contract.methods.BREED(breed1,breed2,sex,cid).send({from:await getCurrentAccount(),gas:4e5,value:0}),location.reload()}async function load(){ethereum&&(web3=new Web3(ethereum),await window.ethereum.request({method:"eth_requestAccounts"})),4!=await web3.eth.net.getId()?(await ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x4"}]}),location.reload()):(contract=new web3.eth.Contract(abi,"0x4dec9B9e26294a931D4e3a160163c701a4A2cDF3"),$("#name").append(await contract.methods.name.call().call()+" - "+await contract.methods.getBalance.call().call()+" balance"),await contract.methods.gen(1).call().then(e=>{$("#mint").append(e[1]+"/"+e[0]+")")}),count=await contract.methods.count.call().call(),await $.getJSON("js/img.json",function(e){img=e}))}var loaded=!1;async function isWeb3(){await web3.eth.getAccounts().then(e=>{e.length>0?($("#connect").hide(),$("#root").show(),0==loaded&&(loadMyOwl(),loaded=!0)):($("#connect").show(),$("#root").hide())})}load(),setInterval(isWeb3,2e3);